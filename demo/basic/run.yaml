#!/bin/env inex

plugins:
  - tensor
  - sum
  - item
  - colors
  - choice1
  - choice2
  - array
  - model
  - params

tensor:
  module: numpy/array
  exports: [shape, dtype]
  options:
    object: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    dtype: float32

sum:
  module: numpy/sum
  imports:
    a: plugins.tensor
  options:
    axis: 1

item:
  module: inex.helpers/evaluate
  imports:
    w: plugins.tensor
  options:
    i: 2
    j: 1
    expression: 'w[i, j]'

colors:
  module: inex.helpers/assign
  options:
    value:
      coral: '#FF7F50'
      lime: '#BFFF00'
      mabel: '#D9F7FF'

choice1:
  module: inex.helpers/posit_args
  imports:
    modname: plugins.colors
  options:
    attname: __getitem__
    arguments: [lime]

choice2:
  module: copy/copy^coral
  imports:
    x: plugins.colors

array:
  module: inex.helpers/attribute
  options:
    modname: numpy
    attname: array

model:
  module: inex.helpers/_import_
  options:
    plugin: model
    config: model.yaml
    model_path: work/models/ResNet-18.pt

params:
  module: inex.helpers/_import_
  options:
    plugin: params
    config: model.yaml

execute:
  method: inex.helpers/show
  imports:
    shape: tensor.shape
    dtype: tensor.dtype
    result: plugins.sum
    value: plugins.item
    color1: plugins.choice1
    color2: plugins.choice2
    color3: plugins.colors^mabel
    array: plugins.array
    model: plugins.model
    params: plugins.params
    list: [tensor.shape, tensor.dtype, plugins.sum]
    dict:
      shape: tensor.shape
      dtype: tensor.dtype
      result: plugins.sum